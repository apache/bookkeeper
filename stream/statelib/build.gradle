/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
plugins {
    id 'idea'
    id 'com.google.protobuf'
    id 'com.adarshr.test-logger'
    id 'org.gradle.test-retry'
}

dependencies {
    implementation project(':bookkeeper-common')
    implementation project(':stream:api')
    implementation project(':stream:common')
    implementation project(':stream:distributedlog:common')
    implementation project(':stream:distributedlog:core')
    implementation project(':stream:distributedlog:protocol')
    implementation project(':stream:proto')

    implementation depLibs.commonsLang2
    implementation depLibs.commonsLang3
    implementation depLibs.guava
    compileOnly depLibs.jsr305
    compileOnly depLibs.lombok
    implementation depLibs.nettyBuffer
    implementation depLibs.nettyCommon
    implementation depLibs.protobuf
    implementation depLibs.rocksDb
    implementation depLibs.slf4j

    testImplementation project(':testtools')
    testImplementation depLibs.commonsConfiguration
    testImplementation depLibs.commonsIO
    testImplementation depLibs.junit
    testImplementation depLibs.mockito
    testImplementation depLibs.metricsCore
    testImplementation depLibs.snappy
    testImplementation depLibs.slf4jSimple
    testImplementation depLibs.lombok
    testImplementation project(path: ':stream:distributedlog:core', configuration: 'testArtifacts')

    annotationProcessor depLibs.lombok
    testAnnotationProcessor depLibs.lombok
}

protobuf {
    plugins {
        grpc {
            artifact = depLibs.protocGenGrpcJava
        }
    }

    protoc {
        artifact = depLibs.protoc
    }

    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }

    generatedFilesBaseDir = "${projectDir}/src/generated"
}

clean {
    delete protobuf.generatedFilesBaseDir
}

test {
    retry {
        maxFailures = 200
        maxRetries = 5
    }

    maxHeapSize = '2G'
    forkEvery = 1
}
