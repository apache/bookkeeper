/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
plugins {
    id 'java'
    id 'com.adarshr.test-logger'
    id 'org.gradle.test-retry'
}

dependencies {
    implementation project(':bookkeeper-common')
    implementation project(':bookkeeper-server')
    implementation project(':stats:bookkeeper-stats-api')
    implementation project(':stream:distributedlog:common')
    implementation project(':stream:distributedlog:protocol')
    implementation depLibs.commonsCli
    implementation depLibs.commonsCodec
    implementation depLibs.commonsConfiguration
    implementation depLibs.commonsIO
    implementation depLibs.commonsLang3
    implementation depLibs.guava
    compileOnly depLibs.jsr305
    compileOnly depLibs.lombok
    compileOnly depLibs.spotbugsAnnotations
    implementation depLibs.nettyBuffer
    implementation depLibs.nettyTransportNativeEpoll
    implementation depLibs.slf4j
    implementation depLibs.thrift
    runtimeOnly depLibs.httpclient
    implementation depLibs.zookeeper

    testRuntimeOnly depLibs.metricsCore
    testRuntimeOnly depLibs.snappy

    testImplementation project(':testtools')
    testImplementation project(path: ':bookkeeper-common', configuration: 'testArtifacts')
    testImplementation project(path: ':bookkeeper-server', configuration: 'testArtifacts')
    testImplementation project(path: ':stream:distributedlog:common', configuration: 'testArtifacts')
    testImplementation depLibs.junit
    testImplementation depLibs.mockito
    testImplementation depLibs.lombok
    testCompileOnly depLibs.jsr305
    compileOnly depLibs.javaAnnotations

    annotationProcessor depLibs.lombok
    testAnnotationProcessor depLibs.lombok
}

test {
    retry {
        maxFailures = 20
        maxRetries = 2
    }

    maxHeapSize = '4G'
    forkEvery = 1
}

test.doFirst {
    jvmArgs("-Djunit.timeout.test=600000", "-Djunit.max.retry=3",
            "-Djava.net.preferIPv4Stack=true", "-Dio.netty.leakDetection.level=paranoid")
}

jar {
    archiveBaseName = 'distributedlog-core'
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.apache.distributedlog'
            artifactId = 'distributedlog-core'
        }
    }
}
