---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: bookkeeper
  labels:
    app: dlstream
    component: bookkeeper
spec:
  serviceName: "bookkeeper"
  replicas: 3
  template:
    metadata:
      labels:
        app: dlstream
        component: bookkeeper
    spec:
      terminationGracePeriodSeconds: 0
      containers:
      - name: bookie
        image: distributedlog/bookie:latest
        ports:
        - containerPort: 3181
        env:
        - name: "ZK_URL"
          value: "zookeeper:2181"
        - name: "BOOKIE_PORT"
          value: "3181"
        volumeMounts:
        - name: journal
          mountPath: /bk/journal
        - name: ledgers
          mountPath: /bk/ledgers
        - name: index
          mountPath: /bk/index
  volumeClaimTemplates:
  - metadata:
      name: journal
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi
  - metadata:
      name: ledgers
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 10Gi
  - metadata:
      name: index
      annotations:
        volume.alpha.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 3Gi
---
# A headless service to create DNS records
apiVersion: v1
kind: Service
metadata:
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: bookkeeper
  labels:
    app: dlstream
    component: bookkeeper-bookie
spec:
  ports:
    - name: bookie
      port: 3181
      protocol: TCP
  # *.bookeeper.default.svc.cluster.local
  clusterIP: None
  selector:
    component: bookkeeper
