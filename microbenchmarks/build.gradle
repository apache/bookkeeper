/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
plugins {
    id 'java'
}

dependencies {
    compileOnly project(":bookkeeper-common")
    compileOnly project(":bookkeeper-server")
    compileOnly project(":bookkeeper-stats-providers:codahale-metrics-provider")
    compileOnly project(":bookkeeper-stats-providers:prometheus-metrics-provider")
    compileOnly project(":bookkeeper-stats")
    compileOnly project(":bookkeeper-proto")
    compileOnly depLibs.metricsCore
    compileOnly depLibs.protobuf
    compileOnly depLibs.nettyBuffer
    compileOnly depLibs.nettyTransport
    compileOnly depLibs.jmhCore
    compileOnly depLibs.guava
    compileOnly depLibs.slf4j
    annotationProcessor depLibs.jmhGeneratorAnnprocess
}

jar {
    manifest {
        attributes 'Main-Class': 'org.openjdk.jmh.Main'
    }
    println configurations.runtime.collect().size()
    from {
        configurations.compileOnly.collect {it.isDirectory() ? it : zipTree(it) }
    }
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    archiveBaseName = 'microbenchmarks'
}