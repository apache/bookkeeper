/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
plugins {
    id 'java-library'
    id 'com.adarshr.test-logger'
    id 'org.gradle.test-retry'
}

description = 'Apache BookKeeper :: Benchmark'

dependencies {

    implementation project(':bookkeeper-common')
    implementation project(':bookkeeper-server')
    implementation project(':stats:bookkeeper-stats-api')

    compileOnly depLibs.lombok
    compileOnly depLibs.spotbugsAnnotations

    implementation depLibs.commonsCli
    implementation depLibs.commonsConfiguration
    implementation depLibs.commonsLang2
    implementation depLibs.commonsLang3
    implementation depLibs.jcommander
    implementation depLibs.nettyBuffer
    implementation depLibs.nettyTransportNativeEpoll
    implementation depLibs.zookeeper
    implementation depLibs.log4jCore
    implementation depLibs.log4jSlf4jImpl

    testImplementation project(':bookkeeper-server')
    testImplementation project(path: ':bookkeeper-common', configuration: 'testArtifacts')
    testImplementation project(path: ':bookkeeper-server', configuration: 'testArtifacts')

    testCompileOnly depLibs.lombok

    testImplementation depLibs.junit
    testImplementation depLibs.hamcrest
    testImplementation depLibs.snappy
    testImplementation depLibs.zookeeperTest
    testImplementation depLibs. metricsCore
    annotationProcessor depLibs.lombok
    testAnnotationProcessor depLibs.lombok
}

test {
    retry {
        maxFailures = 10
        maxRetries = 3
    }
    maxHeapSize = '4G'
    forkEvery = 1
    jvmArgs("-Djunit.timeout.test=600000",
            "-Djunit.max.retry=3",
            "-Djava.net.preferIPv4Stack=true",
            "-Dio.netty.leakDetection.level=paranoid")
}

jar {
    archiveBaseName = 'bookkeeper-benchmark'
}
