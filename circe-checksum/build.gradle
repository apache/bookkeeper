/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
plugins {
    id 'java'
}

dependencies {
    implementation depLibs.guava
    implementation depLibs.nettyBuffer
    implementation depLibs.slf4j
    testImplementation depLibs.junit
    testImplementation depLibs.mockito
}

task generateJniHeaders(type:Exec) {
    ext {
        javahOutputDir = "$buildDir/javahGenerated"
    }
    dependsOn classes
    def classpath = sourceSets.main.output.classesDirs.join(":")
    commandLine("javah", "-d", javahOutputDir, "-classpath",
                classpath, "com.scurrilous.circe.crc.Sse42Crc32C")
}

jar {
    from (tasks.getByPath(":circe-checksum:src:main:circe:linkRelease").outputs.files.filter { f -> f.isFile()} ) {
        into "/lib"
    }
}
